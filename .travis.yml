language: rust
cache: cargo

addons:
  apt:
    sources:
      - sourceline: 'ppa:wireguard/wireguard'
    packages:
      - libsqlite3-dev
      - iperf3
      - python3-pip
      - bridge-utils
      - wireguard
      - linux-source
      - curl
      - git
      - libssl-dev
      - pkg-config
      - build-essential
      - ipset
    update: true
    config:
      retries: true

before_install:
  - sudo apt-get install -y linux-headers-$(uname -r)
  - which diesel || cargo install diesel_cli --no-default-features --features sqlite
  - sudo cp $(which diesel) /usr/bin
env:
  - TEST_COMMAND="rustup component add rustfmt-preview --toolchain nightly && cargo +nightly fmt --all -- --check"
  - TEST_COMMAND="cargo build --verbose --all"
  - TEST_COMMAND="cargo test --verbose --all" RUST_TEST_THREADS=1
rust:
  - stable
  - beta
  - nightly
script:
  - (eval "$TEST_COMMAND")
matrix:
  allow_failures:
    - rust: beta
    - rust: nightly
      env: TEST_COMMAND="cargo build --verbose --all"
    - rust: nightly
      env: TEST_COMMAND="cargo test --verbose --all" RUST_TEST_THREADS=1
  exclude:
    - rust: beta
      env: TEST_COMMAND="rustup component add rustfmt-preview --toolchain nightly && cargo +nightly fmt --all -- --check"
    - rust: stable
      env: TEST_COMMAND="rustup component add rustfmt-preview --toolchain nightly && cargo +nightly fmt --all -- --check"
  include:
    - name: "Cross compile on MIPS"
      script: ./integration-tests/cross-build.sh
    - script: ./integration-tests/rita.sh
      env: INITIAL_POLL_INTERVAL=5 BACKOFF_FACTOR="1.5" VERBOSE=1
    - script: ./integration-tests/rita.sh
      env: REVISION_B=release REMOTE_A=.. COMPAT_LAYOUT="inner_ring_old" INITIAL_POLL_INTERVAL=5 BACKOFF_FACTOR="1.5" VERBOSE=1
    - script: ./integration-tests/rita.sh
      env: REVISION_B=master REMOTE_A=.. COMPAT_LAYOUT="inner_ring_old" INITIAL_POLL_INTERVAL=5 BACKOFF_FACTOR="1.5" VERBOSE=1
